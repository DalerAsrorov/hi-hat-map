(function () {
'use strict';

// Initializing the map
var mainMap = L.map('mapWrapper').setView([51.505, -0.09], 13);

L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(mainMap);

// UI Utils set

function slideToggleCp(targetID) {
    var heightSetterID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'arrowPointerWrapper';
    var cpDefaultHeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "35%";

    var cpNavHeight = document.getElementById(heightSetterID).offsetHeight.toString();
    var cpWrapperHeight = document.getElementById(targetID).offsetHeight.toString();

    if (cpWrapperHeight === cpNavHeight) {
        $("#" + targetID).animate({ height: cpDefaultHeight }, 200);
    } else {
        $("#" + targetID).animate({ height: cpNavHeight }, 200);
    }
}

// Action
window.onload = function (e) {
    e.preventDefault();

    var socket = io.connect('http://localhost:8000/');

    

    $('#toggleSliderBtn').on('click', function (event) {
        console.log('CLICKED');
        slideToggleCp('controlPanelWrapper');
    });

    // let input = document.getElementById('pac-input')
    new L.Control.GPlaceAutocomplete({
        position: 'topright',
        callback: function callback(location) {
            // object of google place is given
            console.log('Location given:', location);
            mainMap.panTo(location);
        }
    }).addTo(mainMap);

    socket.on('tweet', function (tweet) {
        columnsonsole.log('Tweet: ', tweet);
    });
};

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzIjpbIi4uL2pzL21hcC5qcyIsIi4uL2pzL3VpLmpzIiwiLi4vanMvbWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIEluaXRpYWxpemluZyB0aGUgbWFwXG5sZXQgbWFpbk1hcCA9IEwubWFwKCdtYXBXcmFwcGVyJykuc2V0VmlldyhbNTEuNTA1LCAtMC4wOV0sIDEzKTtcblxuTC50aWxlTGF5ZXIoJ2h0dHA6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLCB7XG4gICAgbWF4Wm9vbTogMTksXG4gICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj1cImh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0XCI+T3BlblN0cmVldE1hcDwvYT4nXG59KS5hZGRUbyhtYWluTWFwKTtcblxuZXhwb3J0IGRlZmF1bHQgbWFpbk1hcDsiLCIvLyBVSSBVdGlscyBzZXRcblxuZXhwb3J0IGZ1bmN0aW9uIHNsaWRlVG9nZ2xlQ3AodGFyZ2V0SUQsIGhlaWdodFNldHRlcklEID0gJ2Fycm93UG9pbnRlcldyYXBwZXInLCBjcERlZmF1bHRIZWlnaHQgPSBcIjM1JVwiLCAuLi5yZXN0KSB7XG4gICAgY29uc3QgY3BOYXZIZWlnaHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChoZWlnaHRTZXR0ZXJJRCkub2Zmc2V0SGVpZ2h0LnRvU3RyaW5nKCk7XG4gICAgY29uc3QgY3BXcmFwcGVySGVpZ2h0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGFyZ2V0SUQpLm9mZnNldEhlaWdodC50b1N0cmluZygpO1xuXG4gICAgaWYoY3BXcmFwcGVySGVpZ2h0ID09PSBjcE5hdkhlaWdodCkge1xuICAgICAgICQoYCMke3RhcmdldElEfWApLmFuaW1hdGUoe2hlaWdodDogY3BEZWZhdWx0SGVpZ2h0fSwgMjAwKTtcbiAgIH0gZWxzZSB7XG4gICAgICAgICQoYCMke3RhcmdldElEfWApLmFuaW1hdGUoe2hlaWdodDogY3BOYXZIZWlnaHR9LCAyMDApO1xuICAgfVxufTsiLCJpbXBvcnQgTWFwIGZyb20gJy4vbWFwLmpzJztcbmltcG9ydCAqIGFzIHVpIGZyb20gJy4vdWkuanMnXG5cbi8vIEFjdGlvblxud2luZG93Lm9ubG9hZCA9IChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgbGV0IHNvY2tldCA9IGlvLmNvbm5lY3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC8nKTtcblxuICAgIGZ1bmN0aW9uIGdldFR3ZWV0cyhldmVudCkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhgUmVhZHk6ICR7ZXZlbnR9YCk7XG4gICAgICAgIHNvY2tldC5lbWl0KCd0b3BpYycsIFwidHJ1bXBcIik7XG4gICAgfTtcblxuICAgICQoYCN0b2dnbGVTbGlkZXJCdG5gKS5vbignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ0NMSUNLRUQnKTtcbiAgICAgICAgdWkuc2xpZGVUb2dnbGVDcCgnY29udHJvbFBhbmVsV3JhcHBlcicpO1xuICAgIH0pO1xuXG4gICAgLy8gbGV0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BhYy1pbnB1dCcpXG4gICAgbmV3IEwuQ29udHJvbC5HUGxhY2VBdXRvY29tcGxldGUoe1xuICAgICAgICBwb3NpdGlvbjogJ3RvcHJpZ2h0JyxcbiAgICAgICAgY2FsbGJhY2s6IChsb2NhdGlvbikgPT4ge1xuICAgICAgICAgICAgLy8gb2JqZWN0IG9mIGdvb2dsZSBwbGFjZSBpcyBnaXZlblxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0xvY2F0aW9uIGdpdmVuOicsIGxvY2F0aW9uKTtcbiAgICAgICAgICAgIE1hcC5wYW5Ubyhsb2NhdGlvbik7XG5cbiAgICAgICAgfVxuICAgIH0pLmFkZFRvKE1hcCk7XG5cbiAgICBzb2NrZXQub24oJ3R3ZWV0JywgKHR3ZWV0KSA9PiB7XG4gICAgICAgIGNvbHVtbnNvbnNvbGUubG9nKCdUd2VldDogJywgdHdlZXQpO1xuICAgIH0pO1xufTtcblxuXG5cbiJdLCJuYW1lcyI6WyJtYWluTWFwIiwiTCIsIm1hcCIsInNldFZpZXciLCJ0aWxlTGF5ZXIiLCJhZGRUbyIsInNsaWRlVG9nZ2xlQ3AiLCJ0YXJnZXRJRCIsImhlaWdodFNldHRlcklEIiwiY3BEZWZhdWx0SGVpZ2h0IiwiY3BOYXZIZWlnaHQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwib2Zmc2V0SGVpZ2h0IiwidG9TdHJpbmciLCJjcFdyYXBwZXJIZWlnaHQiLCJhbmltYXRlIiwiaGVpZ2h0Iiwid2luZG93Iiwib25sb2FkIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic29ja2V0IiwiaW8iLCJjb25uZWN0Iiwib24iLCJldmVudCIsImxvZyIsIkNvbnRyb2wiLCJHUGxhY2VBdXRvY29tcGxldGUiLCJsb2NhdGlvbiIsInBhblRvIiwiTWFwIiwidHdlZXQiXSwibWFwcGluZ3MiOiI7OztBQUNBO0FBQ0EsSUFBSUEsVUFBVUMsRUFBRUMsR0FBRixDQUFNLFlBQU4sRUFBb0JDLE9BQXBCLENBQTRCLENBQUMsTUFBRCxFQUFTLENBQUMsSUFBVixDQUE1QixFQUE2QyxFQUE3QyxDQUFkOztBQUVBRixFQUFFRyxTQUFGLENBQVksbURBQVosRUFBaUU7YUFDcEQsRUFEb0Q7aUJBRWhEO0NBRmpCLEVBR0dDLEtBSEgsQ0FHU0wsT0FIVCxFQUtBOztBQ1RBOztBQUVBLEFBQU8sU0FBU00sYUFBVCxDQUF1QkMsUUFBdkIsRUFBMkc7UUFBMUVDLGNBQTBFLHVFQUF6RCxxQkFBeUQ7UUFBbENDLGVBQWtDLHVFQUFoQixLQUFnQjs7UUFDeEdDLGNBQWNDLFNBQVNDLGNBQVQsQ0FBd0JKLGNBQXhCLEVBQXdDSyxZQUF4QyxDQUFxREMsUUFBckQsRUFBcEI7UUFDTUMsa0JBQWtCSixTQUFTQyxjQUFULENBQXdCTCxRQUF4QixFQUFrQ00sWUFBbEMsQ0FBK0NDLFFBQS9DLEVBQXhCOztRQUVHQyxvQkFBb0JMLFdBQXZCLEVBQW9DO2dCQUMzQkgsUUFBTixFQUFrQlMsT0FBbEIsQ0FBMEIsRUFBQ0MsUUFBUVIsZUFBVCxFQUExQixFQUFxRCxHQUFyRDtLQURILE1BRU07Z0JBQ0lGLFFBQU4sRUFBa0JTLE9BQWxCLENBQTBCLEVBQUNDLFFBQVFQLFdBQVQsRUFBMUIsRUFBaUQsR0FBakQ7Ozs7QUNOUjtBQUNBUSxPQUFPQyxNQUFQLEdBQWdCLFVBQUNDLENBQUQsRUFBTztNQUNqQkMsY0FBRjs7UUFFSUMsU0FBU0MsR0FBR0MsT0FBSCxDQUFXLHdCQUFYLENBQWI7Ozs7MEJBT3NCQyxFQUF0QixDQUF5QixPQUF6QixFQUFrQyxVQUFDQyxLQUFELEVBQVc7Z0JBQ2pDQyxHQUFSLENBQVksU0FBWjtxQkFDQSxDQUFpQixxQkFBakI7S0FGSjs7O1FBTUkxQixFQUFFMkIsT0FBRixDQUFVQyxrQkFBZCxDQUFpQztrQkFDbkIsVUFEbUI7a0JBRW5CLGtCQUFDQyxRQUFELEVBQWM7O29CQUVaSCxHQUFSLENBQVksaUJBQVosRUFBK0JHLFFBQS9CO29CQUNJQyxLQUFKLENBQVVELFFBQVY7O0tBTFIsRUFRR3pCLEtBUkgsQ0FRUzJCLE9BUlQ7O1dBVU9QLEVBQVAsQ0FBVSxPQUFWLEVBQW1CLFVBQUNRLEtBQUQsRUFBVztzQkFDWk4sR0FBZCxDQUFrQixTQUFsQixFQUE2Qk0sS0FBN0I7S0FESjtDQTFCSjs7In0=
