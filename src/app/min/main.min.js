(function () {
'use strict';

// Initializing the map
var mainMap = L.map('mapWrapper').setView([51.505, -0.09], 13);

L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(mainMap);

// UI Utils set

function slideToggleCp(targetID) {
    var heightSetterID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'arrowPointerWrapper';
    var cpDefaultHeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "35%";

    var cpNavHeight = document.getElementById(heightSetterID).offsetHeight.toString();
    var cpWrapperHeight = document.getElementById(targetID).offsetHeight.toString();
    var slidingTime = 300;
    var defaultTop = "-15px";

    var $querySearchForm = $('#querySearchForm');
    var $target = $("#" + targetID);
    var $body = $('body');

    if (cpWrapperHeight === cpNavHeight) {
        $body.css({ "overflowY": "auto" });
        $target.animate({ height: cpDefaultHeight }, slidingTime);
        $querySearchForm.animate({
            top: "-15px"
        }, slidingTime);
    } else {
        $body.css({ "overflowY": "hidden" });
        $target.animate({ height: cpNavHeight }, slidingTime);
        $querySearchForm.animate({
            top: "-34px"
        }, slidingTime);
    }
}

// Action
window.onload = function (e) {
    e.preventDefault();

    var socket = io.connect('http://localhost:8000/');

    

    $('#toggleSliderBtn').on('click', function (event) {
        console.log('CLICKED');
        slideToggleCp('controlPanelWrapper');
    });

    // let input = document.getElementById('pac-input')
    new L.Control.GPlaceAutocomplete({
        position: 'topright',
        callback: function callback(location) {
            // object of google place is given
            console.log('Location given:', location);
            mainMap.panTo(location);
        }
    }).addTo(mainMap);

    socket.on('tweet', function (tweet) {
        columnsonsole.log('Tweet: ', tweet);
    });
};

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzIjpbIi4uL2pzL21hcC5qcyIsIi4uL2pzL3VpLmpzIiwiLi4vanMvbWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIEluaXRpYWxpemluZyB0aGUgbWFwXG5sZXQgbWFpbk1hcCA9IEwubWFwKCdtYXBXcmFwcGVyJykuc2V0VmlldyhbNTEuNTA1LCAtMC4wOV0sIDEzKTtcblxuTC50aWxlTGF5ZXIoJ2h0dHA6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLCB7XG4gICAgbWF4Wm9vbTogMTksXG4gICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj1cImh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0XCI+T3BlblN0cmVldE1hcDwvYT4nXG59KS5hZGRUbyhtYWluTWFwKTtcblxuZXhwb3J0IGRlZmF1bHQgbWFpbk1hcDsiLCIvLyBVSSBVdGlscyBzZXRcblxuZXhwb3J0IGZ1bmN0aW9uIHNsaWRlVG9nZ2xlQ3AodGFyZ2V0SUQsIGhlaWdodFNldHRlcklEID0gJ2Fycm93UG9pbnRlcldyYXBwZXInLCBjcERlZmF1bHRIZWlnaHQgPSBcIjM1JVwiLCAuLi5yZXN0KSB7XG4gICAgY29uc3QgY3BOYXZIZWlnaHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChoZWlnaHRTZXR0ZXJJRCkub2Zmc2V0SGVpZ2h0LnRvU3RyaW5nKCk7XG4gICAgY29uc3QgY3BXcmFwcGVySGVpZ2h0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGFyZ2V0SUQpLm9mZnNldEhlaWdodC50b1N0cmluZygpO1xuICAgIGNvbnN0IHNsaWRpbmdUaW1lID0gMzAwO1xuICAgIGNvbnN0IGRlZmF1bHRUb3AgPSBcIi0xNXB4XCI7XG5cbiAgICBjb25zdCAkcXVlcnlTZWFyY2hGb3JtID0gJCgnI3F1ZXJ5U2VhcmNoRm9ybScpO1xuICAgIGNvbnN0ICR0YXJnZXQgPSAkKGAjJHt0YXJnZXRJRH1gKTtcbiAgICBjb25zdCAkYm9keSA9ICQoJ2JvZHknKTtcblxuICAgIGlmKGNwV3JhcHBlckhlaWdodCA9PT0gY3BOYXZIZWlnaHQpIHtcbiAgICAgICAgJGJvZHkuY3NzKHtcIm92ZXJmbG93WVwiOiBcImF1dG9cIn0pO1xuICAgICAgICAkdGFyZ2V0LmFuaW1hdGUoe2hlaWdodDogY3BEZWZhdWx0SGVpZ2h0fSwgc2xpZGluZ1RpbWUpO1xuICAgICAgICAkcXVlcnlTZWFyY2hGb3JtLmFuaW1hdGUoe1xuICAgICAgICAgICAgdG9wOiBcIi0xNXB4XCJcbiAgICAgICAgfSwgc2xpZGluZ1RpbWUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgJGJvZHkuY3NzKHtcIm92ZXJmbG93WVwiOiBcImhpZGRlblwifSk7XG4gICAgICAgICR0YXJnZXQuYW5pbWF0ZSh7aGVpZ2h0OiBjcE5hdkhlaWdodH0sIHNsaWRpbmdUaW1lKTtcbiAgICAgICAgJHF1ZXJ5U2VhcmNoRm9ybS5hbmltYXRlKHtcbiAgICAgICAgICAgIHRvcDogXCItMzRweFwiXG4gICAgICAgIH0sIHNsaWRpbmdUaW1lKTtcbiAgICB9XG59OyIsImltcG9ydCBNYXAgZnJvbSAnLi9tYXAuanMnO1xuaW1wb3J0ICogYXMgdWkgZnJvbSAnLi91aS5qcydcblxuLy8gQWN0aW9uXG53aW5kb3cub25sb2FkID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBsZXQgc29ja2V0ID0gaW8uY29ubmVjdCgnaHR0cDovL2xvY2FsaG9zdDo4MDAwLycpO1xuXG4gICAgZnVuY3Rpb24gZ2V0VHdlZXRzKGV2ZW50KSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGBSZWFkeTogJHtldmVudH1gKTtcbiAgICAgICAgc29ja2V0LmVtaXQoJ3RvcGljJywgXCJ0cnVtcFwiKTtcbiAgICB9O1xuXG4gICAgJChgI3RvZ2dsZVNsaWRlckJ0bmApLm9uKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnQ0xJQ0tFRCcpO1xuICAgICAgICB1aS5zbGlkZVRvZ2dsZUNwKCdjb250cm9sUGFuZWxXcmFwcGVyJyk7XG4gICAgfSk7XG5cbiAgICAvLyBsZXQgaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFjLWlucHV0JylcbiAgICBuZXcgTC5Db250cm9sLkdQbGFjZUF1dG9jb21wbGV0ZSh7XG4gICAgICAgIHBvc2l0aW9uOiAndG9wcmlnaHQnLFxuICAgICAgICBjYWxsYmFjazogKGxvY2F0aW9uKSA9PiB7XG4gICAgICAgICAgICAvLyBvYmplY3Qgb2YgZ29vZ2xlIHBsYWNlIGlzIGdpdmVuXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTG9jYXRpb24gZ2l2ZW46JywgbG9jYXRpb24pO1xuICAgICAgICAgICAgTWFwLnBhblRvKGxvY2F0aW9uKTtcblxuICAgICAgICB9XG4gICAgfSkuYWRkVG8oTWFwKTtcblxuICAgIHNvY2tldC5vbigndHdlZXQnLCAodHdlZXQpID0+IHtcbiAgICAgICAgY29sdW1uc29uc29sZS5sb2coJ1R3ZWV0OiAnLCB0d2VldCk7XG4gICAgfSk7XG59O1xuXG5cblxuIl0sIm5hbWVzIjpbIm1haW5NYXAiLCJMIiwibWFwIiwic2V0VmlldyIsInRpbGVMYXllciIsImFkZFRvIiwic2xpZGVUb2dnbGVDcCIsInRhcmdldElEIiwiaGVpZ2h0U2V0dGVySUQiLCJjcERlZmF1bHRIZWlnaHQiLCJjcE5hdkhlaWdodCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJvZmZzZXRIZWlnaHQiLCJ0b1N0cmluZyIsImNwV3JhcHBlckhlaWdodCIsInNsaWRpbmdUaW1lIiwiZGVmYXVsdFRvcCIsIiRxdWVyeVNlYXJjaEZvcm0iLCIkIiwiJHRhcmdldCIsIiRib2R5IiwiY3NzIiwiYW5pbWF0ZSIsImhlaWdodCIsIndpbmRvdyIsIm9ubG9hZCIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInNvY2tldCIsImlvIiwiY29ubmVjdCIsIm9uIiwiZXZlbnQiLCJsb2ciLCJDb250cm9sIiwiR1BsYWNlQXV0b2NvbXBsZXRlIiwibG9jYXRpb24iLCJwYW5UbyIsIk1hcCIsInR3ZWV0Il0sIm1hcHBpbmdzIjoiOzs7QUFDQTtBQUNBLElBQUlBLFVBQVVDLEVBQUVDLEdBQUYsQ0FBTSxZQUFOLEVBQW9CQyxPQUFwQixDQUE0QixDQUFDLE1BQUQsRUFBUyxDQUFDLElBQVYsQ0FBNUIsRUFBNkMsRUFBN0MsQ0FBZDs7QUFFQUYsRUFBRUcsU0FBRixDQUFZLG1EQUFaLEVBQWlFO2FBQ3BELEVBRG9EO2lCQUVoRDtDQUZqQixFQUdHQyxLQUhILENBR1NMLE9BSFQsRUFLQTs7QUNUQTs7QUFFQSxBQUFPLFNBQVNNLGFBQVQsQ0FBdUJDLFFBQXZCLEVBQTJHO1FBQTFFQyxjQUEwRSx1RUFBekQscUJBQXlEO1FBQWxDQyxlQUFrQyx1RUFBaEIsS0FBZ0I7O1FBQ3hHQyxjQUFjQyxTQUFTQyxjQUFULENBQXdCSixjQUF4QixFQUF3Q0ssWUFBeEMsQ0FBcURDLFFBQXJELEVBQXBCO1FBQ01DLGtCQUFrQkosU0FBU0MsY0FBVCxDQUF3QkwsUUFBeEIsRUFBa0NNLFlBQWxDLENBQStDQyxRQUEvQyxFQUF4QjtRQUNNRSxjQUFjLEdBQXBCO1FBQ01DLGFBQWEsT0FBbkI7O1FBRU1DLG1CQUFtQkMsRUFBRSxrQkFBRixDQUF6QjtRQUNNQyxVQUFVRCxRQUFNWixRQUFOLENBQWhCO1FBQ01jLFFBQVFGLEVBQUUsTUFBRixDQUFkOztRQUVHSixvQkFBb0JMLFdBQXZCLEVBQW9DO2NBQzFCWSxHQUFOLENBQVUsRUFBQyxhQUFhLE1BQWQsRUFBVjtnQkFDUUMsT0FBUixDQUFnQixFQUFDQyxRQUFRZixlQUFULEVBQWhCLEVBQTJDTyxXQUEzQzt5QkFDaUJPLE9BQWpCLENBQXlCO2lCQUNoQjtTQURULEVBRUdQLFdBRkg7S0FISixNQU9LO2NBQ0tNLEdBQU4sQ0FBVSxFQUFDLGFBQWEsUUFBZCxFQUFWO2dCQUNRQyxPQUFSLENBQWdCLEVBQUNDLFFBQVFkLFdBQVQsRUFBaEIsRUFBdUNNLFdBQXZDO3lCQUNpQk8sT0FBakIsQ0FBeUI7aUJBQ2hCO1NBRFQsRUFFR1AsV0FGSDs7OztBQ25CUjtBQUNBUyxPQUFPQyxNQUFQLEdBQWdCLFVBQUNDLENBQUQsRUFBTztNQUNqQkMsY0FBRjs7UUFFSUMsU0FBU0MsR0FBR0MsT0FBSCxDQUFXLHdCQUFYLENBQWI7Ozs7MEJBT3NCQyxFQUF0QixDQUF5QixPQUF6QixFQUFrQyxVQUFDQyxLQUFELEVBQVc7Z0JBQ2pDQyxHQUFSLENBQVksU0FBWjtxQkFDQSxDQUFpQixxQkFBakI7S0FGSjs7O1FBTUlqQyxFQUFFa0MsT0FBRixDQUFVQyxrQkFBZCxDQUFpQztrQkFDbkIsVUFEbUI7a0JBRW5CLGtCQUFDQyxRQUFELEVBQWM7O29CQUVaSCxHQUFSLENBQVksaUJBQVosRUFBK0JHLFFBQS9CO29CQUNJQyxLQUFKLENBQVVELFFBQVY7O0tBTFIsRUFRR2hDLEtBUkgsQ0FRU2tDLE9BUlQ7O1dBVU9QLEVBQVAsQ0FBVSxPQUFWLEVBQW1CLFVBQUNRLEtBQUQsRUFBVztzQkFDWk4sR0FBZCxDQUFrQixTQUFsQixFQUE2Qk0sS0FBN0I7S0FESjtDQTFCSjs7In0=
