(function () {
'use strict';

// Initializing the map
// let mainMap = L.map('mapWrapper').setView([51.505, -0.09], 13);

// L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
//     maxZoom: 19,
//     attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
// }).addTo(mainMap);

var mapLayer = MQ.mapLayer();
var mainMap = void 0;

mainMap = L.map('mapWrapper', {
  layers: mapLayer,
  center: [40.731701, -73.993411],
  zoom: 12
});

L.control.layers({
  'Map': mapLayer,
  'Hybrid': MQ.hybridLayer(),
  'Satellite': MQ.satelliteLayer(),
  'Dark': MQ.darkLayer(),
  'Light': MQ.lightLayer()
}).addTo(mainMap);

var Map = mainMap;

// UI Utils set

function slideToggleCp(targetID, map) {
    var heightSetterID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'arrowPointerWrapper';
    var cpDefaultHeight = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "35%";

    var cpNavHeight = document.getElementById(heightSetterID).offsetHeight.toString();
    var cpWrapperHeight = document.getElementById(targetID).offsetHeight.toString();
    var slidingTime = 300;
    var defaultTop = "-15px";

    var $querySearchForm = $('#querySearchForm');
    var $target = $("#" + targetID);
    var $body = $('body');
    var $slideSwitchIcon = $('#slideSwitchIcon');

    if (cpWrapperHeight === cpNavHeight) {
        $body.css({ "overflowY": "auto" });
        $target.animate({ height: cpDefaultHeight }, slidingTime);
        $querySearchForm.animate({
            top: "-15px"
        }, slidingTime);
        $slideSwitchIcon.addClass('glyphicon-menu-down').removeClass('glyphicon-menu-up');
    } else {
        $body.css({ "overflowY": "hidden" });
        $target.animate({ height: cpNavHeight }, slidingTime);
        $querySearchForm.animate({
            top: "-34px"
        }, slidingTime);
        map.invalidateSize();
        $slideSwitchIcon.addClass('glyphicon-menu-up').removeClass('glyphicon-menu-down');
    }
}

// Action
window.onload = function (e) {
    e.preventDefault();

    var socket = io.connect('http://localhost:8000/');

    

    $('#toggleSliderBtn').on('click', function (event) {
        console.log('CLICKED');
        slideToggleCp('controlPanelWrapper', Map);
    });

    // let input = document.getElementById('pac-input')
    new L.Control.GPlaceAutocomplete({
        position: 'topright',
        callback: function callback(location) {
            // object of google place is given
            console.log('Location given:', location);
            Map.panTo(location);
        }
    }).addTo(Map);

    socket.on('tweet', function (tweet) {
        columnsonsole.log('Tweet: ', tweet);
    });
};

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzIjpbIi4uL2pzL21hcC5qcyIsIi4uL2pzL3VpLmpzIiwiLi4vanMvbWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIEluaXRpYWxpemluZyB0aGUgbWFwXG4vLyBsZXQgbWFpbk1hcCA9IEwubWFwKCdtYXBXcmFwcGVyJykuc2V0VmlldyhbNTEuNTA1LCAtMC4wOV0sIDEzKTtcblxuLy8gTC50aWxlTGF5ZXIoJ2h0dHA6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLCB7XG4vLyAgICAgbWF4Wm9vbTogMTksXG4vLyAgICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj1cImh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0XCI+T3BlblN0cmVldE1hcDwvYT4nXG4vLyB9KS5hZGRUbyhtYWluTWFwKTtcblxubGV0IG1hcExheWVyID0gTVEubWFwTGF5ZXIoKSwgbWFpbk1hcDtcblxubWFpbk1hcCA9IEwubWFwKCdtYXBXcmFwcGVyJywge1xuICAgIGxheWVyczogbWFwTGF5ZXIsXG4gICAgY2VudGVyOiBbIDQwLjczMTcwMSwgLTczLjk5MzQxMSBdLFxuICAgIHpvb206IDEyXG59KTtcblxuTC5jb250cm9sLmxheWVycyh7XG4gICdNYXAnOiBtYXBMYXllcixcbiAgJ0h5YnJpZCc6IE1RLmh5YnJpZExheWVyKCksXG4gICdTYXRlbGxpdGUnOiBNUS5zYXRlbGxpdGVMYXllcigpLFxuICAnRGFyayc6IE1RLmRhcmtMYXllcigpLFxuICAnTGlnaHQnOiBNUS5saWdodExheWVyKClcbn0pLmFkZFRvKG1haW5NYXApO1xuXG5leHBvcnQgZGVmYXVsdCBtYWluTWFwOyIsIi8vIFVJIFV0aWxzIHNldFxuXG5leHBvcnQgZnVuY3Rpb24gc2xpZGVUb2dnbGVDcCh0YXJnZXRJRCwgbWFwLCBoZWlnaHRTZXR0ZXJJRCA9ICdhcnJvd1BvaW50ZXJXcmFwcGVyJywgY3BEZWZhdWx0SGVpZ2h0ID0gXCIzNSVcIiwgLi4ucmVzdCkge1xuICAgIGNvbnN0IGNwTmF2SGVpZ2h0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaGVpZ2h0U2V0dGVySUQpLm9mZnNldEhlaWdodC50b1N0cmluZygpO1xuICAgIGNvbnN0IGNwV3JhcHBlckhlaWdodCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhcmdldElEKS5vZmZzZXRIZWlnaHQudG9TdHJpbmcoKTtcbiAgICBjb25zdCBzbGlkaW5nVGltZSA9IDMwMDtcbiAgICBjb25zdCBkZWZhdWx0VG9wID0gXCItMTVweFwiO1xuXG4gICAgY29uc3QgJHF1ZXJ5U2VhcmNoRm9ybSA9ICQoJyNxdWVyeVNlYXJjaEZvcm0nKTtcbiAgICBjb25zdCAkdGFyZ2V0ID0gJChgIyR7dGFyZ2V0SUR9YCk7XG4gICAgY29uc3QgJGJvZHkgPSAkKCdib2R5Jyk7XG4gICAgY29uc3QgJHNsaWRlU3dpdGNoSWNvbiA9ICQoJyNzbGlkZVN3aXRjaEljb24nKTtcblxuICAgIGlmKGNwV3JhcHBlckhlaWdodCA9PT0gY3BOYXZIZWlnaHQpIHtcbiAgICAgICAgJGJvZHkuY3NzKHtcIm92ZXJmbG93WVwiOiBcImF1dG9cIn0pO1xuICAgICAgICAkdGFyZ2V0LmFuaW1hdGUoe2hlaWdodDogY3BEZWZhdWx0SGVpZ2h0fSwgc2xpZGluZ1RpbWUpO1xuICAgICAgICAkcXVlcnlTZWFyY2hGb3JtLmFuaW1hdGUoe1xuICAgICAgICAgICAgdG9wOiBcIi0xNXB4XCJcbiAgICAgICAgfSwgc2xpZGluZ1RpbWUpO1xuICAgICAgICAkc2xpZGVTd2l0Y2hJY29uLmFkZENsYXNzKCdnbHlwaGljb24tbWVudS1kb3duJykucmVtb3ZlQ2xhc3MoJ2dseXBoaWNvbi1tZW51LXVwJyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAkYm9keS5jc3Moe1wib3ZlcmZsb3dZXCI6IFwiaGlkZGVuXCJ9KTtcbiAgICAgICAgJHRhcmdldC5hbmltYXRlKHtoZWlnaHQ6IGNwTmF2SGVpZ2h0fSwgc2xpZGluZ1RpbWUpO1xuICAgICAgICAkcXVlcnlTZWFyY2hGb3JtLmFuaW1hdGUoe1xuICAgICAgICAgICAgdG9wOiBcIi0zNHB4XCJcbiAgICAgICAgfSwgc2xpZGluZ1RpbWUpO1xuICAgICAgICBtYXAuaW52YWxpZGF0ZVNpemUoKTtcbiAgICAgICAgJHNsaWRlU3dpdGNoSWNvbi5hZGRDbGFzcygnZ2x5cGhpY29uLW1lbnUtdXAnKS5yZW1vdmVDbGFzcygnZ2x5cGhpY29uLW1lbnUtZG93bicpO1xuICAgIH1cbn07IiwiaW1wb3J0IE1hcCBmcm9tICcuL21hcC5qcyc7XG5pbXBvcnQgKiBhcyB1aSBmcm9tICcuL3VpLmpzJ1xuXG4vLyBBY3Rpb25cbndpbmRvdy5vbmxvYWQgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGxldCBzb2NrZXQgPSBpby5jb25uZWN0KCdodHRwOi8vbG9jYWxob3N0OjgwMDAvJyk7XG5cbiAgICBmdW5jdGlvbiBnZXRUd2VldHMoZXZlbnQpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coYFJlYWR5OiAke2V2ZW50fWApO1xuICAgICAgICBzb2NrZXQuZW1pdCgndG9waWMnLCBcInRydW1wXCIpO1xuICAgIH07XG5cbiAgICAkKGAjdG9nZ2xlU2xpZGVyQnRuYCkub24oJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdDTElDS0VEJyk7XG4gICAgICAgIHVpLnNsaWRlVG9nZ2xlQ3AoJ2NvbnRyb2xQYW5lbFdyYXBwZXInLCBNYXApO1xuICAgIH0pO1xuXG4gICAgLy8gbGV0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BhYy1pbnB1dCcpXG4gICAgbmV3IEwuQ29udHJvbC5HUGxhY2VBdXRvY29tcGxldGUoe1xuICAgICAgICBwb3NpdGlvbjogJ3RvcHJpZ2h0JyxcbiAgICAgICAgY2FsbGJhY2s6IChsb2NhdGlvbikgPT4ge1xuICAgICAgICAgICAgLy8gb2JqZWN0IG9mIGdvb2dsZSBwbGFjZSBpcyBnaXZlblxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0xvY2F0aW9uIGdpdmVuOicsIGxvY2F0aW9uKTtcbiAgICAgICAgICAgIE1hcC5wYW5Ubyhsb2NhdGlvbik7XG5cbiAgICAgICAgfVxuICAgIH0pLmFkZFRvKE1hcCk7XG5cbiAgICBzb2NrZXQub24oJ3R3ZWV0JywgKHR3ZWV0KSA9PiB7XG4gICAgICAgIGNvbHVtbnNvbnNvbGUubG9nKCdUd2VldDogJywgdHdlZXQpO1xuICAgIH0pO1xufTtcblxuXG5cbiJdLCJuYW1lcyI6WyJtYXBMYXllciIsIk1RIiwibWFpbk1hcCIsIkwiLCJtYXAiLCJjb250cm9sIiwibGF5ZXJzIiwiaHlicmlkTGF5ZXIiLCJzYXRlbGxpdGVMYXllciIsImRhcmtMYXllciIsImxpZ2h0TGF5ZXIiLCJhZGRUbyIsInNsaWRlVG9nZ2xlQ3AiLCJ0YXJnZXRJRCIsImhlaWdodFNldHRlcklEIiwiY3BEZWZhdWx0SGVpZ2h0IiwiY3BOYXZIZWlnaHQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwib2Zmc2V0SGVpZ2h0IiwidG9TdHJpbmciLCJjcFdyYXBwZXJIZWlnaHQiLCJzbGlkaW5nVGltZSIsImRlZmF1bHRUb3AiLCIkcXVlcnlTZWFyY2hGb3JtIiwiJCIsIiR0YXJnZXQiLCIkYm9keSIsIiRzbGlkZVN3aXRjaEljb24iLCJjc3MiLCJhbmltYXRlIiwiaGVpZ2h0IiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImludmFsaWRhdGVTaXplIiwid2luZG93Iiwib25sb2FkIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic29ja2V0IiwiaW8iLCJjb25uZWN0Iiwib24iLCJldmVudCIsImxvZyIsIk1hcCIsIkNvbnRyb2wiLCJHUGxhY2VBdXRvY29tcGxldGUiLCJsb2NhdGlvbiIsInBhblRvIiwidHdlZXQiXSwibWFwcGluZ3MiOiI7OztBQUNBOzs7Ozs7OztBQVFBLElBQUlBLFdBQVdDLEdBQUdELFFBQUgsRUFBZjtJQUE4QkUs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
